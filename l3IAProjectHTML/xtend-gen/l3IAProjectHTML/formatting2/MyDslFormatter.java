/**
 * generated by Xtext 2.25.0
 */
package l3IAProjectHTML.formatting2;

import com.google.inject.Inject;
import fRUnivCoteAzurL3IAProjectHTML.FileLoader;
import fRUnivCoteAzurL3IAProjectHTML.Filter;
import fRUnivCoteAzurL3IAProjectHTML.Program;
import java.util.Arrays;
import l3IAProjectHTML.services.MyDslGrammarAccess;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;
  
  protected void _format(final Program program, @Extension final IFormattableDocument document) {
    EList<Filter> _filter = program.getFilter();
    for (final Filter filter : _filter) {
      document.<Filter>format(filter);
    }
    EList<FileLoader> _fileloader = program.getFileloader();
    for (final FileLoader fileLoader : _fileloader) {
      document.<FileLoader>format(fileLoader);
    }
  }
  
  public void format(final Object program, final IFormattableDocument document) {
    if (program instanceof XtextResource) {
      _format((XtextResource)program, document);
      return;
    } else if (program instanceof Program) {
      _format((Program)program, document);
      return;
    } else if (program instanceof EObject) {
      _format((EObject)program, document);
      return;
    } else if (program == null) {
      _format((Void)null, document);
      return;
    } else if (program != null) {
      _format(program, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(program, document).toString());
    }
  }
}
